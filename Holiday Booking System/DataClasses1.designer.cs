#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Holiday_Booking_System
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DataSource")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDepartment(Department instance);
    partial void UpdateDepartment(Department instance);
    partial void DeleteDepartment(Department instance);
    partial void InsertHolidayEntitlement(HolidayEntitlement instance);
    partial void UpdateHolidayEntitlement(HolidayEntitlement instance);
    partial void DeleteHolidayEntitlement(HolidayEntitlement instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void InsertHolidayReqConstraint(HolidayReqConstraint instance);
    partial void UpdateHolidayReqConstraint(HolidayReqConstraint instance);
    partial void DeleteHolidayReqConstraint(HolidayReqConstraint instance);
    partial void InsertConstraint(Constraint instance);
    partial void UpdateConstraint(Constraint instance);
    partial void DeleteConstraint(Constraint instance);
    partial void InsertHolidayRequest(HolidayRequest instance);
    partial void UpdateHolidayRequest(HolidayRequest instance);
    partial void DeleteHolidayRequest(HolidayRequest instance);
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::Holiday_Booking_System.Properties.Settings.Default.DataSourceConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Department> Departments
		{
			get
			{
				return this.GetTable<Department>();
			}
		}
		
		public System.Data.Linq.Table<HolidayEntitlement> HolidayEntitlements
		{
			get
			{
				return this.GetTable<HolidayEntitlement>();
			}
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<HolidayReqConstraint> HolidayReqConstraints
		{
			get
			{
				return this.GetTable<HolidayReqConstraint>();
			}
		}
		
		public System.Data.Linq.Table<Constraint> Constraints
		{
			get
			{
				return this.GetTable<Constraint>();
			}
		}
		
		public System.Data.Linq.Table<Employee_view> Employee_views
		{
			get
			{
				return this.GetTable<Employee_view>();
			}
		}
		
		public System.Data.Linq.Table<HolidayReq_View> HolidayReq_Views
		{
			get
			{
				return this.GetTable<HolidayReq_View>();
			}
		}
		
		public System.Data.Linq.Table<HolidayRequest> HolidayRequests
		{
			get
			{
				return this.GetTable<HolidayRequest>();
			}
		}
		
		public System.Data.Linq.Table<Constraints_View> Constraints_Views
		{
			get
			{
				return this.GetTable<Constraints_View>();
			}
		}
		
		public System.Data.Linq.Table<Employee> Employees
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Department")]
	public partial class Department : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Departmentid;
		
		private string _Department_name;
		
		private EntitySet<Employee> _Employees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDepartmentidChanging(int value);
    partial void OnDepartmentidChanged();
    partial void OnDepartment_nameChanging(string value);
    partial void OnDepartment_nameChanged();
    #endregion
		
		public Department()
		{
			this._Employees = new EntitySet<Employee>(new Action<Employee>(this.attach_Employees), new Action<Employee>(this.detach_Employees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Departmentid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Departmentid
		{
			get
			{
				return this._Departmentid;
			}
			set
			{
				if ((this._Departmentid != value))
				{
					this.OnDepartmentidChanging(value);
					this.SendPropertyChanging();
					this._Departmentid = value;
					this.SendPropertyChanged("Departmentid");
					this.OnDepartmentidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department_name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Department_name
		{
			get
			{
				return this._Department_name;
			}
			set
			{
				if ((this._Department_name != value))
				{
					this.OnDepartment_nameChanging(value);
					this.SendPropertyChanging();
					this._Department_name = value;
					this.SendPropertyChanged("Department_name");
					this.OnDepartment_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Employee", Storage="_Employees", ThisKey="Departmentid", OtherKey="Departmentid")]
		public EntitySet<Employee> Employees
		{
			get
			{
				return this._Employees;
			}
			set
			{
				this._Employees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HolidayEntitlement")]
	public partial class HolidayEntitlement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HolidayEntitlementID;
		
		private int _EmployeeID;
		
		private int _Entitlement_days_left;
		
		private int _Extra_days;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHolidayEntitlementIDChanging(int value);
    partial void OnHolidayEntitlementIDChanged();
    partial void OnEmployeeIDChanging(int value);
    partial void OnEmployeeIDChanged();
    partial void OnEntitlement_days_leftChanging(int value);
    partial void OnEntitlement_days_leftChanged();
    partial void OnExtra_daysChanging(int value);
    partial void OnExtra_daysChanged();
    #endregion
		
		public HolidayEntitlement()
		{
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HolidayEntitlementID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int HolidayEntitlementID
		{
			get
			{
				return this._HolidayEntitlementID;
			}
			set
			{
				if ((this._HolidayEntitlementID != value))
				{
					this.OnHolidayEntitlementIDChanging(value);
					this.SendPropertyChanging();
					this._HolidayEntitlementID = value;
					this.SendPropertyChanged("HolidayEntitlementID");
					this.OnHolidayEntitlementIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="Int NOT NULL")]
		public int EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Entitlement_days_left", DbType="Int NOT NULL")]
		public int Entitlement_days_left
		{
			get
			{
				return this._Entitlement_days_left;
			}
			set
			{
				if ((this._Entitlement_days_left != value))
				{
					this.OnEntitlement_days_leftChanging(value);
					this.SendPropertyChanging();
					this._Entitlement_days_left = value;
					this.SendPropertyChanged("Entitlement_days_left");
					this.OnEntitlement_days_leftChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Extra_days", DbType="Int NOT NULL")]
		public int Extra_days
		{
			get
			{
				return this._Extra_days;
			}
			set
			{
				if ((this._Extra_days != value))
				{
					this.OnExtra_daysChanging(value);
					this.SendPropertyChanging();
					this._Extra_days = value;
					this.SendPropertyChanged("Extra_days");
					this.OnExtra_daysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_HolidayEntitlement", Storage="_Employee", ThisKey="EmployeeID", OtherKey="Employee_id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.HolidayEntitlements.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.HolidayEntitlements.Add(this);
						this._EmployeeID = value.Employee_id;
					}
					else
					{
						this._EmployeeID = default(int);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Role")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Roleid;
		
		private string _Role_name;
		
		private EntitySet<Employee> _Employees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleidChanging(int value);
    partial void OnRoleidChanged();
    partial void OnRole_nameChanging(string value);
    partial void OnRole_nameChanged();
    #endregion
		
		public Role()
		{
			this._Employees = new EntitySet<Employee>(new Action<Employee>(this.attach_Employees), new Action<Employee>(this.detach_Employees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Roleid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Roleid
		{
			get
			{
				return this._Roleid;
			}
			set
			{
				if ((this._Roleid != value))
				{
					this.OnRoleidChanging(value);
					this.SendPropertyChanging();
					this._Roleid = value;
					this.SendPropertyChanged("Roleid");
					this.OnRoleidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Role_name
		{
			get
			{
				return this._Role_name;
			}
			set
			{
				if ((this._Role_name != value))
				{
					this.OnRole_nameChanging(value);
					this.SendPropertyChanging();
					this._Role_name = value;
					this.SendPropertyChanged("Role_name");
					this.OnRole_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_Employee", Storage="_Employees", ThisKey="Roleid", OtherKey="Roleid")]
		public EntitySet<Employee> Employees
		{
			get
			{
				return this._Employees;
			}
			set
			{
				this._Employees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HolidayReqConstraints")]
	public partial class HolidayReqConstraint : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HolidayReqConstraintsID;
		
		private int _HolidayRequestID;
		
		private int _ConstraintID;
		
		private EntityRef<Constraint> _Constraint;
		
		private EntityRef<HolidayRequest> _HolidayRequest;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHolidayReqConstraintsIDChanging(int value);
    partial void OnHolidayReqConstraintsIDChanged();
    partial void OnHolidayRequestIDChanging(int value);
    partial void OnHolidayRequestIDChanged();
    partial void OnConstraintIDChanging(int value);
    partial void OnConstraintIDChanged();
    #endregion
		
		public HolidayReqConstraint()
		{
			this._Constraint = default(EntityRef<Constraint>);
			this._HolidayRequest = default(EntityRef<HolidayRequest>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HolidayReqConstraintsID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int HolidayReqConstraintsID
		{
			get
			{
				return this._HolidayReqConstraintsID;
			}
			set
			{
				if ((this._HolidayReqConstraintsID != value))
				{
					this.OnHolidayReqConstraintsIDChanging(value);
					this.SendPropertyChanging();
					this._HolidayReqConstraintsID = value;
					this.SendPropertyChanged("HolidayReqConstraintsID");
					this.OnHolidayReqConstraintsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HolidayRequestID", DbType="Int NOT NULL")]
		public int HolidayRequestID
		{
			get
			{
				return this._HolidayRequestID;
			}
			set
			{
				if ((this._HolidayRequestID != value))
				{
					if (this._HolidayRequest.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHolidayRequestIDChanging(value);
					this.SendPropertyChanging();
					this._HolidayRequestID = value;
					this.SendPropertyChanged("HolidayRequestID");
					this.OnHolidayRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConstraintID", DbType="Int NOT NULL")]
		public int ConstraintID
		{
			get
			{
				return this._ConstraintID;
			}
			set
			{
				if ((this._ConstraintID != value))
				{
					if (this._Constraint.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnConstraintIDChanging(value);
					this.SendPropertyChanging();
					this._ConstraintID = value;
					this.SendPropertyChanged("ConstraintID");
					this.OnConstraintIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Constraint_HolidayReqConstraint", Storage="_Constraint", ThisKey="ConstraintID", OtherKey="ConstraintID", IsForeignKey=true)]
		public Constraint Constraint
		{
			get
			{
				return this._Constraint.Entity;
			}
			set
			{
				Constraint previousValue = this._Constraint.Entity;
				if (((previousValue != value) 
							|| (this._Constraint.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Constraint.Entity = null;
						previousValue.HolidayReqConstraints.Remove(this);
					}
					this._Constraint.Entity = value;
					if ((value != null))
					{
						value.HolidayReqConstraints.Add(this);
						this._ConstraintID = value.ConstraintID;
					}
					else
					{
						this._ConstraintID = default(int);
					}
					this.SendPropertyChanged("Constraint");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HolidayRequest_HolidayReqConstraint", Storage="_HolidayRequest", ThisKey="HolidayRequestID", OtherKey="HolidayRequestID", IsForeignKey=true)]
		public HolidayRequest HolidayRequest
		{
			get
			{
				return this._HolidayRequest.Entity;
			}
			set
			{
				HolidayRequest previousValue = this._HolidayRequest.Entity;
				if (((previousValue != value) 
							|| (this._HolidayRequest.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HolidayRequest.Entity = null;
						previousValue.HolidayReqConstraints.Remove(this);
					}
					this._HolidayRequest.Entity = value;
					if ((value != null))
					{
						value.HolidayReqConstraints.Add(this);
						this._HolidayRequestID = value.HolidayRequestID;
					}
					else
					{
						this._HolidayRequestID = default(int);
					}
					this.SendPropertyChanged("HolidayRequest");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Constraint]")]
	public partial class Constraint : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ConstraintID;
		
		private string _Description;
		
		private EntitySet<HolidayReqConstraint> _HolidayReqConstraints;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnConstraintIDChanging(int value);
    partial void OnConstraintIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Constraint()
		{
			this._HolidayReqConstraints = new EntitySet<HolidayReqConstraint>(new Action<HolidayReqConstraint>(this.attach_HolidayReqConstraints), new Action<HolidayReqConstraint>(this.detach_HolidayReqConstraints));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConstraintID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ConstraintID
		{
			get
			{
				return this._ConstraintID;
			}
			set
			{
				if ((this._ConstraintID != value))
				{
					this.OnConstraintIDChanging(value);
					this.SendPropertyChanging();
					this._ConstraintID = value;
					this.SendPropertyChanged("ConstraintID");
					this.OnConstraintIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Constraint_HolidayReqConstraint", Storage="_HolidayReqConstraints", ThisKey="ConstraintID", OtherKey="ConstraintID")]
		public EntitySet<HolidayReqConstraint> HolidayReqConstraints
		{
			get
			{
				return this._HolidayReqConstraints;
			}
			set
			{
				this._HolidayReqConstraints.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HolidayReqConstraints(HolidayReqConstraint entity)
		{
			this.SendPropertyChanging();
			entity.Constraint = this;
		}
		
		private void detach_HolidayReqConstraints(HolidayReqConstraint entity)
		{
			this.SendPropertyChanging();
			entity.Constraint = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employee_view")]
	public partial class Employee_view
	{
		
		private int _Employee_id;
		
		private string _Username;
		
		private string _First_name;
		
		private string _Last_name;
		
		private string _Role_name;
		
		private string _Department_name;
		
		private bool _is_admin;
		
		private bool _on_duty;
		
		private System.DateTime _date_joined;
		
		private string _Phone_number;
		
		public Employee_view()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employee_id", DbType="Int NOT NULL")]
		public int Employee_id
		{
			get
			{
				return this._Employee_id;
			}
			set
			{
				if ((this._Employee_id != value))
				{
					this._Employee_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this._Username = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_First_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string First_name
		{
			get
			{
				return this._First_name;
			}
			set
			{
				if ((this._First_name != value))
				{
					this._First_name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Last_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Last_name
		{
			get
			{
				return this._Last_name;
			}
			set
			{
				if ((this._Last_name != value))
				{
					this._Last_name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Role_name
		{
			get
			{
				return this._Role_name;
			}
			set
			{
				if ((this._Role_name != value))
				{
					this._Role_name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department_name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Department_name
		{
			get
			{
				return this._Department_name;
			}
			set
			{
				if ((this._Department_name != value))
				{
					this._Department_name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_admin", DbType="Bit NOT NULL")]
		public bool is_admin
		{
			get
			{
				return this._is_admin;
			}
			set
			{
				if ((this._is_admin != value))
				{
					this._is_admin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_on_duty", DbType="Bit NOT NULL")]
		public bool on_duty
		{
			get
			{
				return this._on_duty;
			}
			set
			{
				if ((this._on_duty != value))
				{
					this._on_duty = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_joined", DbType="DateTime NOT NULL")]
		public System.DateTime date_joined
		{
			get
			{
				return this._date_joined;
			}
			set
			{
				if ((this._date_joined != value))
				{
					this._date_joined = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone_number", DbType="VarChar(11) NOT NULL", CanBeNull=false)]
		public string Phone_number
		{
			get
			{
				return this._Phone_number;
			}
			set
			{
				if ((this._Phone_number != value))
				{
					this._Phone_number = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HolidayReq_View")]
	public partial class HolidayReq_View
	{
		
		private int _HolidayRequestID;
		
		private string _Username;
		
		private System.DateTime _start_date;
		
		private System.DateTime _end_date;
		
		private System.Nullable<byte> _approved;
		
		public HolidayReq_View()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HolidayRequestID", DbType="Int NOT NULL")]
		public int HolidayRequestID
		{
			get
			{
				return this._HolidayRequestID;
			}
			set
			{
				if ((this._HolidayRequestID != value))
				{
					this._HolidayRequestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this._Username = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_start_date", DbType="Date NOT NULL")]
		public System.DateTime start_date
		{
			get
			{
				return this._start_date;
			}
			set
			{
				if ((this._start_date != value))
				{
					this._start_date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_end_date", DbType="Date NOT NULL")]
		public System.DateTime end_date
		{
			get
			{
				return this._end_date;
			}
			set
			{
				if ((this._end_date != value))
				{
					this._end_date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_approved", DbType="TinyInt")]
		public System.Nullable<byte> approved
		{
			get
			{
				return this._approved;
			}
			set
			{
				if ((this._approved != value))
				{
					this._approved = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HolidayRequest")]
	public partial class HolidayRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HolidayRequestID;
		
		private int _EmployeeID;
		
		private System.DateTime _start_date;
		
		private System.DateTime _end_date;
		
		private byte _approved;
		
		private EntitySet<HolidayReqConstraint> _HolidayReqConstraints;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHolidayRequestIDChanging(int value);
    partial void OnHolidayRequestIDChanged();
    partial void OnEmployeeIDChanging(int value);
    partial void OnEmployeeIDChanged();
    partial void Onstart_dateChanging(System.DateTime value);
    partial void Onstart_dateChanged();
    partial void Onend_dateChanging(System.DateTime value);
    partial void Onend_dateChanged();
    partial void OnapprovedChanging(byte value);
    partial void OnapprovedChanged();
    #endregion
		
		public HolidayRequest()
		{
			this._HolidayReqConstraints = new EntitySet<HolidayReqConstraint>(new Action<HolidayReqConstraint>(this.attach_HolidayReqConstraints), new Action<HolidayReqConstraint>(this.detach_HolidayReqConstraints));
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HolidayRequestID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int HolidayRequestID
		{
			get
			{
				return this._HolidayRequestID;
			}
			set
			{
				if ((this._HolidayRequestID != value))
				{
					this.OnHolidayRequestIDChanging(value);
					this.SendPropertyChanging();
					this._HolidayRequestID = value;
					this.SendPropertyChanged("HolidayRequestID");
					this.OnHolidayRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="Int NOT NULL")]
		public int EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_start_date", DbType="Date NOT NULL")]
		public System.DateTime start_date
		{
			get
			{
				return this._start_date;
			}
			set
			{
				if ((this._start_date != value))
				{
					this.Onstart_dateChanging(value);
					this.SendPropertyChanging();
					this._start_date = value;
					this.SendPropertyChanged("start_date");
					this.Onstart_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_end_date", DbType="Date NOT NULL")]
		public System.DateTime end_date
		{
			get
			{
				return this._end_date;
			}
			set
			{
				if ((this._end_date != value))
				{
					this.Onend_dateChanging(value);
					this.SendPropertyChanging();
					this._end_date = value;
					this.SendPropertyChanged("end_date");
					this.Onend_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_approved", DbType="TinyInt NOT NULL")]
		public byte approved
		{
			get
			{
				return this._approved;
			}
			set
			{
				if ((this._approved != value))
				{
					this.OnapprovedChanging(value);
					this.SendPropertyChanging();
					this._approved = value;
					this.SendPropertyChanged("approved");
					this.OnapprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HolidayRequest_HolidayReqConstraint", Storage="_HolidayReqConstraints", ThisKey="HolidayRequestID", OtherKey="HolidayRequestID")]
		public EntitySet<HolidayReqConstraint> HolidayReqConstraints
		{
			get
			{
				return this._HolidayReqConstraints;
			}
			set
			{
				this._HolidayReqConstraints.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_HolidayRequest", Storage="_Employee", ThisKey="EmployeeID", OtherKey="Employee_id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.HolidayRequests.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.HolidayRequests.Add(this);
						this._EmployeeID = value.Employee_id;
					}
					else
					{
						this._EmployeeID = default(int);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HolidayReqConstraints(HolidayReqConstraint entity)
		{
			this.SendPropertyChanging();
			entity.HolidayRequest = this;
		}
		
		private void detach_HolidayReqConstraints(HolidayReqConstraint entity)
		{
			this.SendPropertyChanging();
			entity.HolidayRequest = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Constraints_View")]
	public partial class Constraints_View
	{
		
		private System.DateTime _start_date;
		
		private System.DateTime _end_date;
		
		private byte _approved;
		
		private string _ConstraintDetails;
		
		private int _EmployeeID;
		
		private int _HolidayRequestID;
		
		private int _ConstraintID;
		
		public Constraints_View()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_start_date", DbType="Date NOT NULL")]
		public System.DateTime start_date
		{
			get
			{
				return this._start_date;
			}
			set
			{
				if ((this._start_date != value))
				{
					this._start_date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_end_date", DbType="Date NOT NULL")]
		public System.DateTime end_date
		{
			get
			{
				return this._end_date;
			}
			set
			{
				if ((this._end_date != value))
				{
					this._end_date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_approved", DbType="TinyInt NOT NULL")]
		public byte approved
		{
			get
			{
				return this._approved;
			}
			set
			{
				if ((this._approved != value))
				{
					this._approved = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConstraintDetails", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ConstraintDetails
		{
			get
			{
				return this._ConstraintDetails;
			}
			set
			{
				if ((this._ConstraintDetails != value))
				{
					this._ConstraintDetails = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="Int NOT NULL")]
		public int EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					this._EmployeeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HolidayRequestID", DbType="Int NOT NULL")]
		public int HolidayRequestID
		{
			get
			{
				return this._HolidayRequestID;
			}
			set
			{
				if ((this._HolidayRequestID != value))
				{
					this._HolidayRequestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConstraintID", DbType="Int NOT NULL")]
		public int ConstraintID
		{
			get
			{
				return this._ConstraintID;
			}
			set
			{
				if ((this._ConstraintID != value))
				{
					this._ConstraintID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employee")]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Employee_id;
		
		private string _Username;
		
		private string _Password;
		
		private string _First_name;
		
		private string _Last_name;
		
		private int _Departmentid;
		
		private int _Roleid;
		
		private bool _is_admin;
		
		private bool _on_duty;
		
		private System.DateTime _date_joined;
		
		private string _Phone_number;
		
		private EntitySet<HolidayEntitlement> _HolidayEntitlements;
		
		private EntitySet<HolidayRequest> _HolidayRequests;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<Role> _Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployee_idChanging(int value);
    partial void OnEmployee_idChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnFirst_nameChanging(string value);
    partial void OnFirst_nameChanged();
    partial void OnLast_nameChanging(string value);
    partial void OnLast_nameChanged();
    partial void OnDepartmentidChanging(int value);
    partial void OnDepartmentidChanged();
    partial void OnRoleidChanging(int value);
    partial void OnRoleidChanged();
    partial void Onis_adminChanging(bool value);
    partial void Onis_adminChanged();
    partial void Onon_dutyChanging(bool value);
    partial void Onon_dutyChanged();
    partial void Ondate_joinedChanging(System.DateTime value);
    partial void Ondate_joinedChanged();
    partial void OnPhone_numberChanging(string value);
    partial void OnPhone_numberChanged();
    #endregion
		
		public Employee()
		{
			this._HolidayEntitlements = new EntitySet<HolidayEntitlement>(new Action<HolidayEntitlement>(this.attach_HolidayEntitlements), new Action<HolidayEntitlement>(this.detach_HolidayEntitlements));
			this._HolidayRequests = new EntitySet<HolidayRequest>(new Action<HolidayRequest>(this.attach_HolidayRequests), new Action<HolidayRequest>(this.detach_HolidayRequests));
			this._Department = default(EntityRef<Department>);
			this._Role = default(EntityRef<Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employee_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Employee_id
		{
			get
			{
				return this._Employee_id;
			}
			set
			{
				if ((this._Employee_id != value))
				{
					this.OnEmployee_idChanging(value);
					this.SendPropertyChanging();
					this._Employee_id = value;
					this.SendPropertyChanged("Employee_id");
					this.OnEmployee_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_First_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string First_name
		{
			get
			{
				return this._First_name;
			}
			set
			{
				if ((this._First_name != value))
				{
					this.OnFirst_nameChanging(value);
					this.SendPropertyChanging();
					this._First_name = value;
					this.SendPropertyChanged("First_name");
					this.OnFirst_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Last_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Last_name
		{
			get
			{
				return this._Last_name;
			}
			set
			{
				if ((this._Last_name != value))
				{
					this.OnLast_nameChanging(value);
					this.SendPropertyChanging();
					this._Last_name = value;
					this.SendPropertyChanged("Last_name");
					this.OnLast_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Departmentid", DbType="Int NOT NULL")]
		public int Departmentid
		{
			get
			{
				return this._Departmentid;
			}
			set
			{
				if ((this._Departmentid != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentidChanging(value);
					this.SendPropertyChanging();
					this._Departmentid = value;
					this.SendPropertyChanged("Departmentid");
					this.OnDepartmentidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Roleid", DbType="Int NOT NULL")]
		public int Roleid
		{
			get
			{
				return this._Roleid;
			}
			set
			{
				if ((this._Roleid != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleidChanging(value);
					this.SendPropertyChanging();
					this._Roleid = value;
					this.SendPropertyChanged("Roleid");
					this.OnRoleidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_admin", DbType="Bit NOT NULL")]
		public bool is_admin
		{
			get
			{
				return this._is_admin;
			}
			set
			{
				if ((this._is_admin != value))
				{
					this.Onis_adminChanging(value);
					this.SendPropertyChanging();
					this._is_admin = value;
					this.SendPropertyChanged("is_admin");
					this.Onis_adminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_on_duty", DbType="Bit NOT NULL")]
		public bool on_duty
		{
			get
			{
				return this._on_duty;
			}
			set
			{
				if ((this._on_duty != value))
				{
					this.Onon_dutyChanging(value);
					this.SendPropertyChanging();
					this._on_duty = value;
					this.SendPropertyChanged("on_duty");
					this.Onon_dutyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_joined", DbType="DateTime NOT NULL")]
		public System.DateTime date_joined
		{
			get
			{
				return this._date_joined;
			}
			set
			{
				if ((this._date_joined != value))
				{
					this.Ondate_joinedChanging(value);
					this.SendPropertyChanging();
					this._date_joined = value;
					this.SendPropertyChanged("date_joined");
					this.Ondate_joinedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone_number", DbType="VarChar(11) NOT NULL", CanBeNull=false)]
		public string Phone_number
		{
			get
			{
				return this._Phone_number;
			}
			set
			{
				if ((this._Phone_number != value))
				{
					this.OnPhone_numberChanging(value);
					this.SendPropertyChanging();
					this._Phone_number = value;
					this.SendPropertyChanged("Phone_number");
					this.OnPhone_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_HolidayEntitlement", Storage="_HolidayEntitlements", ThisKey="Employee_id", OtherKey="EmployeeID")]
		public EntitySet<HolidayEntitlement> HolidayEntitlements
		{
			get
			{
				return this._HolidayEntitlements;
			}
			set
			{
				this._HolidayEntitlements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_HolidayRequest", Storage="_HolidayRequests", ThisKey="Employee_id", OtherKey="EmployeeID")]
		public EntitySet<HolidayRequest> HolidayRequests
		{
			get
			{
				return this._HolidayRequests;
			}
			set
			{
				this._HolidayRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Employee", Storage="_Department", ThisKey="Departmentid", OtherKey="Departmentid", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.Employees.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.Employees.Add(this);
						this._Departmentid = value.Departmentid;
					}
					else
					{
						this._Departmentid = default(int);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_Employee", Storage="_Role", ThisKey="Roleid", OtherKey="Roleid", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.Employees.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.Employees.Add(this);
						this._Roleid = value.Roleid;
					}
					else
					{
						this._Roleid = default(int);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HolidayEntitlements(HolidayEntitlement entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_HolidayEntitlements(HolidayEntitlement entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_HolidayRequests(HolidayRequest entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_HolidayRequests(HolidayRequest entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
	}
}
#pragma warning restore 1591
